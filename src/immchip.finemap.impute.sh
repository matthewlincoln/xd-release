#!/bin/bash
#SBATCH -J immchip.finemap.impute
#SBATCH --partition=general
#SBATCH -C cascadelake
#SBATCH --mem=16G
#SBATCH --time=2-00:00:00

temp_direc=$1
data_direc=$2
src_direc=$3
bin_direc=$4
log_direc=$5
project_direc=$6
results_direc=$7
base_direc=$8

# Temporary values for debugging:
base_direc=/ysm-gpfs/home/mrl54/immchip

# meta does not deal with symlinks, so map $temp_direc to absolute path:
temp_direc=/gpfs/ysm/scratch60/mrl54/immchip
data_direc=/ysm-gpfs/home/mrl54/immchip/data
src_direc=/ysm-gpfs/home/mrl54/immchip/src
bin_direc=/ysm-gpfs/home/mrl54/bin
log_direc=/ysm-gpfs/home/mrl54/immchip/logs
project_direc=/ysm-gpfs/home/mrl54/project/immchip
results_direc=/ysm-gpfs/home/mrl54/immchip/results

PATH=$PATH:${bin_direc}

################################################################################
############################    Section 0: Notes    ############################
################################################################################

# This script uses JLIM to identify traits that are likely to share a common
# underlying causal variant. We use imputed genotypes in this analysis.


################################################################################
##############    Section 1: Define consortia and their strata    ##############
################################################################################

# List of all consortia:
cons_list="ced ibd ms sle t1d ra"

# List of the stratified consortia:
strat_cons_list="ced ibd ms ra"
### sle and t1d are initially excluded from this list because their strata were
### QC'd as two separate consortia

# Create an associative array containing the list of strata, indexed by
# consortium:
declare -A strat_list
for cons in $strat_cons_list; do

  # Get a list of strata for this consortium:
  stratum_list=`cat ${log_direc}/qc/${cons}/${cons}.subjects.by.stratum.txt | \
    awk '{ print $3 }' | sort | uniq`

  # Remove strata that failed QC:
  if [ $cons == "ced" ]; then
    # Remove the Indian stratum (ethnic outliers) and Unknown stratum (all
    # phenos unknown):
    stratum_list=`echo $stratum_list | sed 's/Indian//'`
    stratum_list=`echo $stratum_list | sed 's/Unknown//'`

    # Remove the Dutch (insufficient controls) and Romanian (only one individual
    # remaining) strata:
    stratum_list=`echo $stratum_list | sed 's/Dutch//'`
    stratum_list=`echo $stratum_list | sed 's/Romanian//'`

  elif [ $cons == "ibd" ]; then
    # Remove the Iran stratum:
    stratum_list=`echo $stratum_list | sed 's/Iran//'`
    stratum_list=`echo $stratum_list | sed 's/China//'`

    # Remove the IMSGC (no cases) and UK (no controls) strata:
    stratum_list=`echo $stratum_list | sed 's/IMSGC//'`
    stratum_list=`echo $stratum_list | sed 's/UK//'`

  elif [ $cons == "ms" ]; then
    # Remove the Unknown stratum:
    stratum_list=`echo $stratum_list | sed 's/Unknown//'`

  else
    stratum_list=`echo $stratum_list | sed 's/\n//'`
  fi

  stratum_list=`echo $stratum_list | sed 's/  / /g'`

  strat_list[$cons]=$stratum_list
done

# Add remaining consortia:
strat_cons_list="$strat_cons_list sle"
strat_cons_list="$strat_cons_list t1d"
strat_list["sle"]="sle_g.EA sle_o"
strat_list["t1d"]="GRID ASP"

# QC thresholds for association and meta analysis:
MAX_HET_I2=50
MIN_PROP_STRATA=0.5

# The FDR threshold to use for conditional assocation testing:
COND_R2_THRESHOLD=0.90
COND_P_THRESHOLD=0.0001


# Read ImmunoChip region coordinates:
while read chr start end name; do
  region_num=`echo $name | sed 's/^Region//'`
  chr_num=`echo $chr | sed 's/^chr//'`

  immchip_chr["$region_num"]=$chr_num
  immchip_start["$region_num"]=$start
  immchip_end["$region_num"]=$end
done < ${data_direc}/reference/Immunochip-Region-Sorted.bed

module load R/3.5.0-foss-2016b-avx2
module load VCFtools
module load tabix


################################################################################
################    Section 2: Association and meta-analysis    ################
################################################################################

# In this section, we perform association and meta-analysis across co-localized
# traits at each ImmunoChip locus. The list of colocalized traits, contained in
# ${results_direc}/jlim_impute/jlim.impute.clusters.txt, was generated by
# immchip.jlim.impute.sh.

# For each cluster, we identify duplicates shared among co-localized traits and
# remove all-but-one of each duplicate. We then repeat association tests and
# meta analysis.

# We iterate over conditional vs. unconditional association analysis, pedigree
# vs. dosage reference genotype data, and use multiple meta analysis models.

for jlim_method in "ped" "dosage"; do
  # Obtain lists of colocalized regions and clusters:
  region_list=$(cat ${results_direc}/jlim_impute/jlim.impute.clusters.${jlim_method}.txt | \
                  awk 'NR !=1 { print $1 }' | \
                  sort -n | uniq)

  declare -A cluster_list
  for region_num in $region_list; do
    clusters=$(cat ${results_direc}/jlim_impute/jlim.impute.clusters.${jlim_method}.txt | \
                 awk -v region=$region_num '$1==region { print $2 }' | \
                 sort -n | uniq)
    cluster_list[$region_num]=$clusters
  done

  # Iterate over all regions and clusters:
  for region_num in $region_list; do
    for cluster_num in ${cluster_list["$region_num"]}; do
      mkdir -p ${temp_direc}/13_jlim_impute/5_fine_map/${jlim_method}/region_${region_num}/cluster_${cluster_num}/identify_dupes \
               ${temp_direc}/13_jlim_impute/5_fine_map/${jlim_method}/region_${region_num}/cluster_${cluster_num}/datasets \
               ${temp_direc}/13_jlim_impute/5_fine_map/${jlim_method}/region_${region_num}/cluster_${cluster_num}/assoc

      # Obtain list of traits to analyze for this cluster:
      cons_to_meta=$(cat ${results_direc}/jlim_impute/jlim.impute.clusters.${jlim_method}.txt | \
                       awk -v region=$region_num -v cluster=$cluster_num \
                       'BEGIN{ ORS=" " }
                        $1==region && $2==cluster { print $4 }' | \
                       sort | uniq)

      # Identify duplicates to remove from this cluster:
      > ${temp_direc}/13_jlim_impute/5_fine_map/${jlim_method}/region_${region_num}/cluster_${cluster_num}/identify_dupes/pooled.individuals.fam
      echo "FID IID MISS_PHENO N_MISS N_GENO F_MISS" > \
        ${temp_direc}/13_jlim_impute/5_fine_map/${jlim_method}/region_${region_num}/cluster_${cluster_num}/identify_dupes/pooled.individuals.imiss
      for cons in $cons_to_meta; do
        # echo $cons
        cat ${temp_direc}/13_jlim_impute/3_identify_dups/3_missingness/${cons}.fam >> \
          ${temp_direc}/13_jlim_impute/5_fine_map/${jlim_method}/region_${region_num}/cluster_${cluster_num}/identify_dupes/pooled.individuals.fam

        cat ${temp_direc}/13_jlim_impute/3_identify_dups/3_missingness/${cons}.imiss | \
          awk 'NR!=1' >> \
          ${temp_direc}/13_jlim_impute/5_fine_map/${jlim_method}/region_${region_num}/cluster_${cluster_num}/identify_dupes/pooled.individuals.imiss
      done # cons

      cat ${results_direc}/jlim_impute/all.cons.merged.genome | \
        awk '$10>=0.9' | \
        sort -k 1,1 | \
        join -j 1 - \
                  <(sort -k 1,1 ${temp_direc}/13_jlim_impute/5_fine_map/${jlim_method}/region_${region_num}/cluster_${cluster_num}/identify_dupes/pooled.individuals.fam) | \
        sort -k 3,3 | \
        join -1 3 -2 1 - \
                  <(sort -k 1,1 ${temp_direc}/13_jlim_impute/5_fine_map/${jlim_method}/region_${region_num}/cluster_${cluster_num}/identify_dupes/pooled.individuals.fam) | \
        awk 'BEGIN{ OFS="\t";
                    print "FID1","IID1","FID2","IID2","RT","EZ","Z0","Z1","Z2","PI_HAT","PHE","DST","PPC","RATIO","IBS0","IBS1","IBS2","HOMHOM","HETHET" }
             { print $2,$3,$1,$4,$5,$6,$7,$8,$9,$10,$11,$12,$13,$14,$15,$16,$17,$18,$19 }' > \
        ${temp_direc}/13_jlim_impute/5_fine_map/${jlim_method}/region_${region_num}/cluster_${cluster_num}/identify_dupes/pooled.duplicates.genome
      ### Note that we filter by PI_HAT >= 0.9; we are only interested to remove
      ### true duplicates, not low-level (e.g. ~ 0.185) relatives that are likely
      ### to be spurious.

      Rscript ${src_direc}/identify.dups.and.rels.to.remove.R \
              ${temp_direc}/13_jlim_impute/5_fine_map/${jlim_method}/region_${region_num}/cluster_${cluster_num}/identify_dupes/pooled.duplicates.genome \
              ${temp_direc}/13_jlim_impute/5_fine_map/${jlim_method}/region_${region_num}/cluster_${cluster_num}/identify_dupes/pooled.individuals.imiss \
              ${temp_direc}/13_jlim_impute/5_fine_map/${jlim_method}/region_${region_num}/cluster_${cluster_num}/identify_dupes/pooled.individuals.fam \
              TRUE \
              ${temp_direc}/13_jlim_impute/5_fine_map/${jlim_method}/region_${region_num}/cluster_${cluster_num}/identify_dupes \
              cluster_${cluster_num}


      # Remove duplicates and perform (conditional) association testing in each stratum:
      echo "region_num cons stratum indep_num rsid chromosome position alleleA alleleB beta se p" > \
        ${temp_direc}/13_jlim_impute/5_fine_map/${jlim_method}/region_${region_num}/cluster_${cluster_num}/assoc/region_${region_num}.cluster_${cluster_num}.assoc.results.txt
      cat ${results_direc}/jlim_impute/jlim.impute.clusters.${jlim_method}.txt | \
        awk -v region=$region_num -v cluster=$cluster_num \
          '$1==region && $2==cluster { print $4,$5 }' | \
      while read cons indep_num; do
        for stratum in ${strat_list[$cons]}; do
          qctool_v2.1-dev -g ${temp_direc}/13_jlim_impute/1_cond_assoc/region_${region_num}/${cons}/${cons}.${stratum}.region_${region_num}.imputed.bgen \
                          -s ${temp_direc}/13_jlim_impute/1_cond_assoc/region_${region_num}/${cons}/${cons}.${stratum}.region_${region_num}.imputed.2pc.sample \
                          -excl-samples ${temp_direc}/13_jlim_impute/5_fine_map/${jlim_method}/region_${region_num}/cluster_${cluster_num}/identify_dupes/cluster_${cluster_num}.relatives.to.remove.txt \
                          -ofiletype bgen_v1.1 \
                          -bgen-permitted-input-rounding-error 0.001 \
                          -og ${temp_direc}/13_jlim_impute/5_fine_map/${jlim_method}/region_${region_num}/cluster_${cluster_num}/datasets/${cons}.${stratum}.region_${region_num}.imputed.nodup.bgen \
                          -os ${temp_direc}/13_jlim_impute/5_fine_map/${jlim_method}/region_${region_num}/cluster_${cluster_num}/datasets/${cons}.${stratum}.region_${region_num}.imputed.nodup.sample

          if [ "$indep_num" -eq 0 ]; then
            condition_snps=""
          else
            condition_snps=$(cat ${temp_direc}/13_jlim_impute/1_cond_assoc/region_${region_num}/${cons}/region_${region_num}.${cons}.lead.snps.txt | \
                               awk -v strat=$stratum -v indep=$indep_num \
                                 'BEGIN{ ORS = " " }
                                  $3!=(indep-1) && $4==strat { print $5 }')
          fi

          # snptest cannot tolerate \"-\" in file names, replace these with \"_\":
          safestrat=$(echo $stratum | sed 's/-/_/g')

          # Run association test:
          snptest_v2.5.2 -data ${temp_direc}/13_jlim_impute/5_fine_map/${jlim_method}/region_${region_num}/cluster_${cluster_num}/datasets/${cons}.${stratum}.region_${region_num}.imputed.nodup.bgen \
                               ${temp_direc}/13_jlim_impute/5_fine_map/${jlim_method}/region_${region_num}/cluster_${cluster_num}/datasets/${cons}.${stratum}.region_${region_num}.imputed.nodup.sample \
                         -frequentist 1 \
                         -method expected \
                         -pheno pheno \
                         -cov_names pc1 pc2 \
                         -condition_on $condition_snps \
                         -o ${temp_direc}/13_jlim_impute/5_fine_map/${jlim_method}/region_${region_num}/cluster_${cluster_num}/assoc/region_${region_num}.${cons}_${indep_num}.${safestrat}.snptest

          # Compile association statistics into a single file input for meta analysis:
          cat ${temp_direc}/13_jlim_impute/5_fine_map/${jlim_method}/region_${region_num}/cluster_${cluster_num}/assoc/region_${region_num}.${cons}_${indep_num}.${safestrat}.snptest | \
            awk -v region=$region_num -v cons=$cons -v strat=$stratum -v cluster=$cluster_num \
            '!/^#/ && $2 != "rsid" { print region,"cluster",cons"."strat,cluster,$2,$3,$4,$5,$6,$44,$45,$42}' >> \
            ${temp_direc}/13_jlim_impute/5_fine_map/${jlim_method}/region_${region_num}/cluster_${cluster_num}/assoc/region_${region_num}.cluster_${cluster_num}.assoc.results.txt

          # rm ${temp_direc}/13_jlim_impute/5_fine_map/region_${region_num}/cluster_${cluster_num}/assoc/region_${region_num}.${cons}_${indep_num}.${safestrat}.snptest
        done # stratum
      done # cons indep_num
    done # cluster_num
  done # region_num

  # Clear region and cluster lists between iterations:
  unset region_list
  unset cluster_list
done # jlim_method


# Compile association data for each disease cluster. Note that association stats
# for disease-level meta-analysis were calculated previously (in
# immchip.jlim.impute.sh). Association stats for cross-disease meta-analysis
# have had cross-disease duplicates removed (above).
echo "region_num jlim_refgt cluster_num cluster_size cons stratum indep_num rsid chromosome position alleleA alleleB beta se p" > \
  ${results_direc}/jlim_impute/jlim.cond.impute.clusters.assoc.P_${COND_P_THRESHOLD}.R_${COND_R2_THRESHOLD}.txt
for jlim_method in "ped" "dosage"; do
  # Compile association data for individual diseases:
  cat ${results_direc}/jlim_impute/jlim.impute.clusters.${jlim_method}.txt | \
    awk 'NR!=1 { print $1"_"$4"_"$5,$0 }' | \
    sort -k 1,1 | \
    join -1 1 - -o 1.2,1.3,1.4,1.5,2.4,1.6,2.6,2.7,2.8,2.9,2.10,2.11,2.12,2.13 \
      <(zcat ${results_direc}/jlim_impute/jlim.cond.impute.indep.P_${COND_P_THRESHOLD}.R_${COND_R2_THRESHOLD}.txt.gz | \
          awk 'NR!=1 { print $1"_"$2"_"$4,$0 }' | \
          sort -k 1,1) | \
    awk -v method=$jlim_method \
      '{ print $1,method,$2,$3,$4,$5,$6,$7,$8,$9,$10,$11,$12,$13,$14 }' >> \
    ${results_direc}/jlim_impute/jlim.cond.impute.clusters.assoc.P_${COND_P_THRESHOLD}.R_${COND_R2_THRESHOLD}.txt

  # Compile association data for clusters:
  cat ${results_direc}/jlim_impute/jlim.impute.clusters.${jlim_method}.txt | \
    awk 'NR!=1 { print $1,$2,$3 }' | \
    sort -k 1n,1 -k 2n,2 | uniq | \
  while read region_num cluster_num cluster_size; do
    cat ${temp_direc}/13_jlim_impute/5_fine_map/${jlim_method}/region_${region_num}/cluster_${cluster_num}/assoc/region_${region_num}.cluster_${cluster_num}.assoc.results.txt | \
      awk -v method=$jlim_method -v cluster=$cluster_num -v clust_size=$cluster_size \
        'NR!=1 { print $1,method,cluster,clust_size,$2,$3,$4,$5,$6,$7,$8,$9,$10,$11,$12 }' >> \
      ${results_direc}/jlim_impute/jlim.cond.impute.clusters.assoc.P_${COND_P_THRESHOLD}.R_${COND_R2_THRESHOLD}.txt
  done # clusters
done # jlim_method

gzip -f ${results_direc}/jlim_impute/jlim.cond.impute.clusters.assoc.P_${COND_P_THRESHOLD}.R_${COND_R2_THRESHOLD}.txt


# Perform meta analysis across colocalized clusters:
script ${src_direc}/jlim.impute.finemap.metafor.R \
        ${results_direc}/jlim_impute/jlim.cond.impute.clusters.assoc.P_${COND_P_THRESHOLD}.R_${COND_R2_THRESHOLD}.txt.gz \
        $MAX_HET_I2 \
        $MIN_PROP_STRATA \
        fe \
        ${results_direc}/jlim_impute/jlim.cond.impute.clusters.meta.P_${COND_P_THRESHOLD}.R_${COND_R2_THRESHOLD}.all.txt.gz \
        ${results_direc}/jlim_impute/jlim.cond.impute.clusters.meta.P_${COND_P_THRESHOLD}.R_${COND_R2_THRESHOLD}.fe.txt.gz \
        ${results_direc}/jlim_impute/jlim.cond.impute.clusters.meta.P_${COND_P_THRESHOLD}.R_${COND_R2_THRESHOLD}.all.filter.txt.gz \
        ${results_direc}/jlim_impute/jlim.cond.impute.clusters.meta.P_${COND_P_THRESHOLD}.R_${COND_R2_THRESHOLD}.fe.filter.txt.gz \
        ${results_direc}/jlim_impute/jlim.cond.impute.clusters.meta.P_${COND_P_THRESHOLD}.R_${COND_R2_THRESHOLD}.fe.flip.txt.gz \
        ${results_direc}/jlim_impute/jlim.cond.impute.clusters.meta.P_${COND_P_THRESHOLD}.R_${COND_R2_THRESHOLD}.fe.merge.txt.gz
### Note that with mode set to "fe", we only run the fixed effects models (without moderators)


################################################################################
##################    Section 3: Fine mapping with FINEMAP    ##################
################################################################################

# In this section, we use FINEMAP to perform fine-mapping.

# Run FINEMAP on all colocalized traits:
zcat ${results_direc}/jlim_impute/jlim.cond.impute.clusters.meta.P_${COND_P_THRESHOLD}.R_${COND_R2_THRESHOLD}.fe.merge.txt.gz | \
  awk 'NR!=1 { print $1,$2,$3,$4,$5 }' | \
  sort -k 1n,1 -k 2,2 -k 3n,3 -k 4,4 -k 5n,5 | \
  uniq | \
  while read region_num jlim_refgt cluster_num cons indep_num; do

    mkdir -p ${temp_direc}/13_jlim_impute/5_fine_map/${jlim_refgt}/region_${region_num}/cluster_${cluster_num}/finemap

    if [ "$cons" == "cluster" ]; then
      filestem="${temp_direc}/13_jlim_impute/5_fine_map/${jlim_refgt}/region_${region_num}/cluster_${cluster_num}/finemap/cluster"
      trait="cluster"
    else
      filestem="${temp_direc}/13_jlim_impute/5_fine_map/${jlim_refgt}/region_${region_num}/cluster_${cluster_num}/finemap/${cons}_${indep_num}"
      trait="${cons}_${indep_num}"
    fi

    # Extract association statistics for this trait:
    zcat ${results_direc}/jlim_impute/jlim.cond.impute.clusters.meta.P_${COND_P_THRESHOLD}.R_${COND_R2_THRESHOLD}.fe.merge.txt.gz | \
     awk -v filestem=$filestem \
         -v region=$region_num -v jlim_mode=$jlim_refgt -v cluster=$cluster_num -v cons=$cons -v indep=$indep_num \
        'BEGIN{ output=filestem".meta.txt";
                print "chr","pos","rsid","a0","a1","beta","se" > output }
         NR!=1 && $1==region && $2==jlim_mode && $3==cluster && $4==cons && $5==indep { print $6,$7,$6":"$7":"$8":"$9,$8,$9,$10,$11 > output }'

    # Merge filesets for this trait:
    mergelist=""
    if [ "$trait" == "cluster" ]; then
      # Merge all datasets for this cluster:
      mergelist=$(ls -l ${temp_direc}/13_jlim_impute/5_fine_map/${jlim_refgt}/region_${region_num}/cluster_${cluster_num}/datasets/* | \
                    awk 'BEGIN { OFS=" "; ORS=" " }
                         /bgen$/ { print "-g",$9 }
                         /sample$/ { print "-s",$9 }')
    else
      # Merge all strata for this disease:
      for stratum in ${strat_list["$cons"]}; do
        mergelist="$mergelist -g ${temp_direc}/13_jlim_impute/1_cond_assoc/region_${region_num}/${cons}/${cons}.${stratum}.region_${region_num}.imputed.bgen \
-s ${temp_direc}/13_jlim_impute/1_cond_assoc/region_${region_num}/${cons}/${cons}.${stratum}.region_${region_num}.imputed.sample"
      done
    fi

    # Produce merged genotype file and calculate allele frequencies:
    qctool_v2.1-dev $mergelist \
                    -incl-positions <(cat ${filestem}.meta.txt | awk 'NR!=1 { print $1":"$2 }') \
                    -compare-variants-by position,alleles \
                    -flip-to-match-cohort1 \
                    -ofiletype bgen_v1.1 \
                    -bgen-permitted-input-rounding-error 0.001 \
                    -snp-stats \
                    -snp-stats-columns allele-frequencies \
                    -osnp ${temp_direc}/13_jlim_impute/5_fine_map/${jlim_refgt}/region_${region_num}/cluster_${cluster_num}/finemap/${trait}.stats \
                    -og ${temp_direc}/13_jlim_impute/5_fine_map/${jlim_refgt}/region_${region_num}/cluster_${cluster_num}/finemap/${trait}.bgen \
                    -os ${temp_direc}/13_jlim_impute/5_fine_map/${jlim_refgt}/region_${region_num}/cluster_${cluster_num}/finemap/${trait}.sample

    # Calculate LD matrix:
    plink --bgen ${temp_direc}/13_jlim_impute/5_fine_map/${jlim_refgt}/region_${region_num}/cluster_${cluster_num}/finemap/${trait}.bgen \
          --sample ${temp_direc}/13_jlim_impute/5_fine_map/${jlim_refgt}/region_${region_num}/cluster_${cluster_num}/finemap/${trait}.sample \
          --allow-no-sex \
          --r2 square spaces \
          --out ${temp_direc}/13_jlim_impute/5_fine_map/${jlim_refgt}/region_${region_num}/cluster_${cluster_num}/finemap/${trait}

    # Produce .z file:
    join -j 1 \
      <(cat ${filestem}.meta.txt | \
          awk '{ print $1":"$2,$1,$2,$3,$4,$5,$6,$7 }' | \
          sort -k 1,1) \
      <(cat ${temp_direc}/13_jlim_impute/5_fine_map/${jlim_refgt}/region_${region_num}/cluster_${cluster_num}/finemap/${trait}.stats | \
          awk '{ print $3":"$4,$5,$6,$12 }' | \
          sort -k 1,1) | \
      sort -k 1,1 | \
      # Check that allele encoding agrees:
      awk 'BEGIN { print "rsid","chromosome","position","allele1","allele2","maf","beta","se" }
           { # Encode beta relative to qctool alleleA:
             if ($5==$10 && $6==$9) { $7 = -1*$7 }
             else if (!($5==$9 && $6==$10)) { $7 = "NA"; $8="NA" }
             print $4,$2,$3,$9,$10,$11,$7,$8 }' > \
      ${temp_direc}/13_jlim_impute/5_fine_map/${jlim_refgt}/region_${region_num}/cluster_${cluster_num}/finemap/${trait}.z

    # Calculate sample size:
    sample_size=$(cat ${temp_direc}/13_jlim_impute/5_fine_map/${jlim_refgt}/region_${region_num}/cluster_${cluster_num}/finemap/${trait}.sample | \
      tail -n +3 | wc -l)

    # Make master file:
    echo \
"z;ld;snp;config;cred;log;n_samples
${temp_direc}/13_jlim_impute/5_fine_map/${jlim_refgt}/region_${region_num}/cluster_${cluster_num}/finemap/${trait}.z;\
${temp_direc}/13_jlim_impute/5_fine_map/${jlim_refgt}/region_${region_num}/cluster_${cluster_num}/finemap/${trait}.ld;\
${temp_direc}/13_jlim_impute/5_fine_map/${jlim_refgt}/region_${region_num}/cluster_${cluster_num}/finemap/${trait}.snp;\
${temp_direc}/13_jlim_impute/5_fine_map/${jlim_refgt}/region_${region_num}/cluster_${cluster_num}/finemap/${trait}.config;\
${temp_direc}/13_jlim_impute/5_fine_map/${jlim_refgt}/region_${region_num}/cluster_${cluster_num}/finemap/${trait}.cred;\
${temp_direc}/13_jlim_impute/5_fine_map/${jlim_refgt}/region_${region_num}/cluster_${cluster_num}/finemap/${trait}.log;\
${sample_size}" > \
      ${temp_direc}/13_jlim_impute/5_fine_map/${jlim_refgt}/region_${region_num}/cluster_${cluster_num}/finemap/${trait}.master

    finemap_v1.3.1_x86_64 --sss \
                          --n-causal-snps 1 \
                          --in-files ${temp_direc}/13_jlim_impute/5_fine_map/${jlim_refgt}/region_${region_num}/cluster_${cluster_num}/finemap/${trait}.master
  done # trait


# Compile FINEMAP posterior probabilities for each region:
echo "region_num jlim_refgt cluster_num cons indep_num rsid chromosome position allele1 allele2 maf beta se z prob log10bf group corr_group prob_group log10bf_group mean sd mean_incl sd_incl" > \
  ${results_direc}/jlim_impute/jlim.cond.impute.clusters.finemap.P_${COND_P_THRESHOLD}.R_${COND_R2_THRESHOLD}.txt
zcat ${results_direc}/jlim_impute/jlim.cond.impute.clusters.meta.P_${COND_P_THRESHOLD}.R_${COND_R2_THRESHOLD}.fe.merge.txt.gz | \
  awk 'NR!=1 { print $1,$2,$3,$4,$5 }' | \
  sort -k 1n,1 -k 2,2 -k 3n,3 -k 4,4 -k 5n,5 | \
  uniq | \
  while read region_num jlim_refgt cluster_num cons indep_num; do

    if [ "$cons" == "cluster" ]; then
      snp_file="${temp_direc}/13_jlim_impute/5_fine_map/${jlim_refgt}/region_${region_num}/cluster_${cluster_num}/finemap/cluster.snp"
    else
      snp_file="${temp_direc}/13_jlim_impute/5_fine_map/${jlim_refgt}/region_${region_num}/cluster_${cluster_num}/finemap/${cons}_${indep_num}.snp"
    fi

    if [ -f $snp_file ]; then
      cat $snp_file | \
        tail -n +2 | \
        sort -k 4n,4 | \
        awk -v region=$region_num -v refgt=$jlim_refgt -v cluster=$cluster_num \
            -v cons=$cons -v indep=$indep_num \
          '{ print region,refgt,cluster,cons,indep,$2,$3,$4,$5,$6,$7,$8,$9,$10,$11,$12,$13,$14,$15,$16,$17,$18,$19,$20 }' >> \
        ${results_direc}/jlim_impute/jlim.cond.impute.clusters.finemap.P_${COND_P_THRESHOLD}.R_${COND_R2_THRESHOLD}.txt
    else
      echo "$region_num $jlim_refgt $cluster_num $cons $indep_num NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA" >> \
        ${results_direc}/jlim_impute/jlim.cond.impute.clusters.finemap.P_${COND_P_THRESHOLD}.R_${COND_R2_THRESHOLD}.txt
    fi

  done # trait

gzip -f ${results_direc}/jlim_impute/jlim.cond.impute.clusters.finemap.P_${COND_P_THRESHOLD}.R_${COND_R2_THRESHOLD}.txt


################################################################################
#########    Section 4: Meta-analysis for JLIM-negative trait pairs    #########
################################################################################

# In this section, we perform meta analysis for each JLIM-negative trait pair to
# determine see how heterogeneity measures differ between JLIM-positive and
# JLIM-negative traits.

# Code is modified from Section 2, above.

unset region_list
unset cluster_list

for jlim_method in "ped" "dosage"; do
  # Obtain lists of colocalized regions and clusters:
  region_list=$(cat ${results_direc}/jlim_impute/jlim.neg.impute.pairs.${jlim_method}.txt | \
                  awk 'NR !=1 { print $1 }' | \
                  sort -n | uniq)

  declare -A cluster_list
  for region_num in $region_list; do
    clusters=$(cat ${results_direc}/jlim_impute/jlim.neg.impute.pairs.${jlim_method}.txt | \
                 awk -v region=$region_num '$1==region { print $2 }' | \
                 sort -n | uniq)
    cluster_list[$region_num]=$clusters
  done

  # Iterate over all regions and clusters:
  for region_num in $region_list; do
    for cluster_num in ${cluster_list["$region_num"]}; do
      mkdir -p ${temp_direc}/13_jlim_impute/7_jlim_neg_meta/${jlim_method}/region_${region_num}/cluster_${cluster_num}/identify_dupes \
               ${temp_direc}/13_jlim_impute/7_jlim_neg_meta/${jlim_method}/region_${region_num}/cluster_${cluster_num}/datasets \
               ${temp_direc}/13_jlim_impute/7_jlim_neg_meta/${jlim_method}/region_${region_num}/cluster_${cluster_num}/assoc

      # Obtain list of traits to analyze for this cluster:
      cons_to_meta=$(cat ${results_direc}/jlim.neg.impute.pairs.${jlim_method}.txt | \
                       awk -v region=$region_num -v cluster=$cluster_num \
                       'BEGIN{ ORS=" " }
                        $1==region && $2==cluster { print $4 }' | \
                       sort | uniq)

      # Identify duplicates to remove from this cluster:
      > ${temp_direc}/13_jlim_impute/7_jlim_neg_meta/${jlim_method}/region_${region_num}/cluster_${cluster_num}/identify_dupes/pooled.individuals.fam
      echo "FID IID MISS_PHENO N_MISS N_GENO F_MISS" > \
        ${temp_direc}/13_jlim_impute/7_jlim_neg_meta/${jlim_method}/region_${region_num}/cluster_${cluster_num}/identify_dupes/pooled.individuals.imiss
      for cons in $cons_to_meta; do
        # echo $cons
        cat ${temp_direc}/13_jlim_impute/3_identify_dups/3_missingness/${cons}.fam >> \
          ${temp_direc}/13_jlim_impute/7_jlim_neg_meta/${jlim_method}/region_${region_num}/cluster_${cluster_num}/identify_dupes/pooled.individuals.fam

        cat ${temp_direc}/13_jlim_impute/3_identify_dups/3_missingness/${cons}.imiss | \
          awk 'NR!=1' >> \
          ${temp_direc}/13_jlim_impute/7_jlim_neg_meta/${jlim_method}/region_${region_num}/cluster_${cluster_num}/identify_dupes/pooled.individuals.imiss
      done # cons

      cat ${results_direc}/jlim_impute/all.cons.merged.genome | \
        awk '$10>=0.9' | \
        sort -k 1,1 | \
        join -j 1 - \
                  <(sort -k 1,1 ${temp_direc}/13_jlim_impute/7_jlim_neg_meta/${jlim_method}/region_${region_num}/cluster_${cluster_num}/identify_dupes/pooled.individuals.fam) | \
        sort -k 3,3 | \
        join -1 3 -2 1 - \
                  <(sort -k 1,1 ${temp_direc}/13_jlim_impute/7_jlim_neg_meta/${jlim_method}/region_${region_num}/cluster_${cluster_num}/identify_dupes/pooled.individuals.fam) | \
        awk 'BEGIN{ OFS="\t";
                    print "FID1","IID1","FID2","IID2","RT","EZ","Z0","Z1","Z2","PI_HAT","PHE","DST","PPC","RATIO","IBS0","IBS1","IBS2","HOMHOM","HETHET" }
             { print $2,$3,$1,$4,$5,$6,$7,$8,$9,$10,$11,$12,$13,$14,$15,$16,$17,$18,$19 }' > \
        ${temp_direc}/13_jlim_impute/7_jlim_neg_meta/${jlim_method}/region_${region_num}/cluster_${cluster_num}/identify_dupes/pooled.duplicates.genome
      ### Note that we filter by PI_HAT >= 0.9; we are only interested to remove
      ### true duplicates, not low-level (e.g. ~ 0.185) relatives that are likely
      ### to be spurious.

      Rscript ${src_direc}/identify.dups.and.rels.to.remove.R \
              ${temp_direc}/13_jlim_impute/7_jlim_neg_meta/${jlim_method}/region_${region_num}/cluster_${cluster_num}/identify_dupes/pooled.duplicates.genome \
              ${temp_direc}/13_jlim_impute/7_jlim_neg_meta/${jlim_method}/region_${region_num}/cluster_${cluster_num}/identify_dupes/pooled.individuals.imiss \
              ${temp_direc}/13_jlim_impute/7_jlim_neg_meta/${jlim_method}/region_${region_num}/cluster_${cluster_num}/identify_dupes/pooled.individuals.fam \
              TRUE \
              ${temp_direc}/13_jlim_impute/7_jlim_neg_meta/${jlim_method}/region_${region_num}/cluster_${cluster_num}/identify_dupes \
              cluster_${cluster_num}


      # Remove duplicates and perform (conditional) association testing in each stratum:
      echo "region_num cons stratum indep_num rsid chromosome position alleleA alleleB beta se p" > \
        ${temp_direc}/13_jlim_impute/7_jlim_neg_meta/${jlim_method}/region_${region_num}/cluster_${cluster_num}/assoc/region_${region_num}.cluster_${cluster_num}.assoc.results.txt
      cat ${results_direc}/jlim_impute/jlim.neg.impute.pairs.${jlim_method}.txt | \
        awk -v region=$region_num -v cluster=$cluster_num \
          '$1==region && $2==cluster { print $4,$5 }' | \
      while read cons indep_num; do
        for stratum in ${strat_list[$cons]}; do
          qctool_v2.1-dev -g ${temp_direc}/13_jlim_impute/1_cond_assoc/region_${region_num}/${cons}/${cons}.${stratum}.region_${region_num}.imputed.bgen \
                          -s ${temp_direc}/13_jlim_impute/1_cond_assoc/region_${region_num}/${cons}/${cons}.${stratum}.region_${region_num}.imputed.2pc.sample \
                          -excl-samples ${temp_direc}/13_jlim_impute/7_jlim_neg_meta/${jlim_method}/region_${region_num}/cluster_${cluster_num}/identify_dupes/cluster_${cluster_num}.relatives.to.remove.txt \
                          -ofiletype bgen_v1.1 \
                          -bgen-permitted-input-rounding-error 0.001 \
                          -og ${temp_direc}/13_jlim_impute/7_jlim_neg_meta/${jlim_method}/region_${region_num}/cluster_${cluster_num}/datasets/${cons}.${stratum}.region_${region_num}.imputed.nodup.bgen \
                          -os ${temp_direc}/13_jlim_impute/7_jlim_neg_meta/${jlim_method}/region_${region_num}/cluster_${cluster_num}/datasets/${cons}.${stratum}.region_${region_num}.imputed.nodup.sample

          if [ "$indep_num" -eq 0 ]; then
            condition_snps=""
          else
            condition_snps=$(cat ${temp_direc}/13_jlim_impute/1_cond_assoc/region_${region_num}/${cons}/region_${region_num}.${cons}.lead.snps.txt | \
                               awk -v strat=$stratum -v indep=$indep_num \
                                 'BEGIN{ ORS = " " }
                                  $3!=(indep-1) && $4==strat { print $5 }')
          fi

          # snptest cannot tolerate \"-\" in file names, replace these with \"_\":
          safestrat=$(echo $stratum | sed 's/-/_/g')

          # Run association test:
          snptest_v2.5.2 -data ${temp_direc}/13_jlim_impute/7_jlim_neg_meta/${jlim_method}/region_${region_num}/cluster_${cluster_num}/datasets/${cons}.${stratum}.region_${region_num}.imputed.nodup.bgen \
                               ${temp_direc}/13_jlim_impute/7_jlim_neg_meta/${jlim_method}/region_${region_num}/cluster_${cluster_num}/datasets/${cons}.${stratum}.region_${region_num}.imputed.nodup.sample \
                         -frequentist 1 \
                         -method expected \
                         -pheno pheno \
                         -cov_names pc1 pc2 \
                         -condition_on $condition_snps \
                         -o ${temp_direc}/13_jlim_impute/7_jlim_neg_meta/${jlim_method}/region_${region_num}/cluster_${cluster_num}/assoc/region_${region_num}.${cons}_${indep_num}.${safestrat}.snptest

          # Compile association statistics into a single file input for meta analysis:
          cat ${temp_direc}/13_jlim_impute/7_jlim_neg_meta/${jlim_method}/region_${region_num}/cluster_${cluster_num}/assoc/region_${region_num}.${cons}_${indep_num}.${safestrat}.snptest | \
            awk -v region=$region_num -v cons=$cons -v strat=$stratum -v cluster=$cluster_num \
            '!/^#/ && $2 != "rsid" { print region,"cluster",cons"."strat,cluster,$2,$3,$4,$5,$6,$44,$45,$42}' >> \
            ${temp_direc}/13_jlim_impute/7_jlim_neg_meta/${jlim_method}/region_${region_num}/cluster_${cluster_num}/assoc/region_${region_num}.cluster_${cluster_num}.assoc.results.txt

          # rm ${temp_direc}/13_jlim_impute/7_jlim_neg_meta/region_${region_num}/cluster_${cluster_num}/assoc/region_${region_num}.${cons}_${indep_num}.${safestrat}.snptest
        done # stratum
      done # cons indep_num
    done # cluster_num
  done # region_num

  # Clear region and cluster lists between iterations:
  unset region_list
  unset cluster_list
done # jlim_method


# Compile association data for each disease cluster. Note that association stats
# for disease-level meta-analysis were calculated previously (in
# immchip.finemap.impute.sh). Association stats for cross-disease meta-analysis
# have had cross-disease duplicates removed (above).
echo "region_num jlim_refgt cluster_num cluster_size cons stratum indep_num rsid chromosome position alleleA alleleB beta se p" > \
  ${results_direc}/jlim_impute/jlim.cond.impute.neg.pairs.assoc.P_${COND_P_THRESHOLD}.R_${COND_R2_THRESHOLD}.txt
for jlim_method in "ped" "dosage"; do
  # Compile association data for individual diseases:
  cat ${results_direc}/jlim_impute/jlim.neg.impute.pairs.${jlim_method}.txt | \
    awk 'NR!=1 { print $1"_"$4"_"$5,$0 }' | \
    sort -k 1,1 | \
    join -1 1 - -o 1.2,1.3,1.4,1.5,2.4,1.6,2.6,2.7,2.8,2.9,2.10,2.11,2.12,2.13 \
      <(zcat ${results_direc}/jlim_impute/jlim.cond.impute.indep.P_${COND_P_THRESHOLD}.R_${COND_R2_THRESHOLD}.txt.gz | \
          awk 'NR!=1 { print $1"_"$2"_"$4,$0 }' | \
          sort -k 1,1) | \
    awk -v method=$jlim_method \
      '{ print $1,method,$2,$3,$4,$5,$6,$7,$8,$9,$10,$11,$12,$13,$14 }' >> \
    ${results_direc}/jlim_impute/jlim.cond.impute.neg.pairs.assoc.P_${COND_P_THRESHOLD}.R_${COND_R2_THRESHOLD}.txt

  # Compile association data for clusters:
  cat ${results_direc}/jlim_impute/jlim.neg.impute.pairs.${jlim_method}.txt | \
    awk 'NR!=1 { print $1,$2,$3 }' | \
    sort -k 1n,1 -k 2n,2 | uniq | \
  while read region_num cluster_num cluster_size; do
    cat ${temp_direc}/13_jlim_impute/7_jlim_neg_meta/${jlim_method}/region_${region_num}/cluster_${cluster_num}/assoc/region_${region_num}.cluster_${cluster_num}.assoc.results.txt | \
      awk -v method=$jlim_method -v cluster=$cluster_num -v clust_size=$cluster_size \
        'NR!=1 { print $1,method,cluster,clust_size,$2,$3,$4,$5,$6,$7,$8,$9,$10,$11,$12 }' >> \
      ${results_direc}/jlim_impute/jlim.cond.impute.neg.pairs.assoc.P_${COND_P_THRESHOLD}.R_${COND_R2_THRESHOLD}.txt
  done # clusters
done # jlim_method

gzip -f ${results_direc}/jlim_impute/jlim.cond.impute.neg.pairs.assoc.P_${COND_P_THRESHOLD}.R_${COND_R2_THRESHOLD}.txt


Rscript ${src_direc}/jlim.impute.finemap.metafor.R \
        ${results_direc}/jlim_impute/jlim.cond.impute.neg.pairs.assoc.P_${COND_P_THRESHOLD}.R_${COND_R2_THRESHOLD}.txt.gz \
        $MAX_HET_I2 \
        $MIN_PROP_STRATA \
        fe \
        ${results_direc}/jlim_impute/jlim.cond.impute.neg.pairs.meta.P_${COND_P_THRESHOLD}.R_${COND_R2_THRESHOLD}.all.txt.gz \
        ${results_direc}/jlim_impute/jlim.cond.impute.neg.pairs.meta.P_${COND_P_THRESHOLD}.R_${COND_R2_THRESHOLD}.fe.txt.gz \
        ${results_direc}/jlim_impute/jlim.cond.impute.neg.pairs.meta.P_${COND_P_THRESHOLD}.R_${COND_R2_THRESHOLD}.all.filter.txt.gz \
        ${results_direc}/jlim_impute/jlim.cond.impute.neg.pairs.meta.P_${COND_P_THRESHOLD}.R_${COND_R2_THRESHOLD}.fe.filter.txt.gz \
        ${results_direc}/jlim_impute/jlim.cond.impute.neg.pairs.meta.P_${COND_P_THRESHOLD}.R_${COND_R2_THRESHOLD}.fe.flip.txt.gz \
        ${results_direc}/jlim_impute/jlim.cond.impute.neg.pairs.meta.P_${COND_P_THRESHOLD}.R_${COND_R2_THRESHOLD}.fe.merge.txt.gz
### Note that with mode set to "fe", we only run the fixed effects models (without moderators)


################################################################################
############    Section 7: Fine-map non-shared loci with FINEMAP    ############
################################################################################

# Meta-analyze traits that are not shared with another disease:

mkdir -p ${temp_direc}/13_jlim_impute/8_fine_map_unique

cp ${data_direc}/reference/hg19ToHg38.over.chain.gz \
  ${temp_direc}/13_jlim_impute/8_fine_map_unique

gzip -d ${temp_direc}/13_jlim_impute/8_fine_map_unique/hg19ToHg38.over.chain.gz

Rscript ${src_direc}/metafor.impute.unique.R \
        ${results_direc}/jlim_impute/jlim.cond.impute.indep.P_${COND_P_THRESHOLD}.R_0.90.txt.gz \
        $MAX_HET_I2 \
        $MIN_PROP_STRATA \
        ${results_direc}/jlim_impute/jlim.impute.consolidated.statistics.txt \
        0.0001 \
        ${results_direc}/jlim_impute/meta.cond.impute.unique.P_${COND_P_THRESHOLD}.R_${COND_R2_THRESHOLD}.all.txt.gz \
        ${results_direc}/jlim_impute/meta.cond.impute.unique.P_${COND_P_THRESHOLD}.R_${COND_R2_THRESHOLD}.filter.txt.gz \
        ${results_direc}/jlim_impute/meta.cond.impute.unique.P_${COND_P_THRESHOLD}.R_${COND_R2_THRESHOLD}.filter.p_0.0001.txt.gz \
        ${temp_direc}/13_jlim_impute/8_fine_map_unique/hg19ToHg38.over.chain \
        ${results_direc}/jlim_impute/meta.cond.impute.unique.P_${COND_P_THRESHOLD}.R_${COND_R2_THRESHOLD}.filter.p_0.0001.liftover.txt.gz \
        ${results_direc}/jlim_impute/meta.cond.impute.unique.P_${COND_P_THRESHOLD}.R_${COND_R2_THRESHOLD}.filter.p_0.0001.hg38.txt.gz
### Note that this script analyzes only traits not included in any colocalized
### cluster. A second output file is produced that contains only results for
### traits with lead SNP P < 0.001 and a third with these reusults lifted over
### to GRCh38.


# Run FINEMAP on traits that are unique to a single disease:
zcat ${results_direc}/jlim_impute/meta.cond.impute.unique.P_${COND_P_THRESHOLD}.R_${COND_R2_THRESHOLD}.filter.p_0.0001.txt.gz | \
  tail -n +2 | \
  # head -n 2 | \
  cut -f 1-3 | \
  sort -k 1n,1 -k 2,2 -k 3n,3 | \
  uniq | \
  while read region_num cons indep_num; do

    mkdir -p ${temp_direc}/13_jlim_impute/8_fine_map_unique/region_${region_num}

    filestem="${temp_direc}/13_jlim_impute/8_fine_map_unique/region_${region_num}/region_${region_num}.${cons}_${indep_num}"

    # Extract association statistics for this trait:
    zcat ${results_direc}/jlim_impute/meta.cond.impute.unique.P_${COND_P_THRESHOLD}.R_${COND_R2_THRESHOLD}.filter.p_0.0001.txt.gz | \
      awk -v output=${filestem}.assoc.txt \
          -v region=$region_num -v cons=$cons -v indep=$indep_num \
          'BEGIN{ print "chr","pos","rsid","a0","a1","beta","se" > output }
           NR!=1 && $1==region && $2==cons && $3==indep { print $4,$5,$4":"$5":"$6":"$7,$6,$7,$8,$9 > output }'

    # Merge all strata for this disease:
    mergelist=""
    for stratum in ${strat_list["$cons"]}; do
      mergelist="$mergelist -g ${temp_direc}/13_jlim_impute/1_cond_assoc/region_${region_num}/${cons}/${cons}.${stratum}.region_${region_num}.imputed.bgen \
-s ${temp_direc}/13_jlim_impute/1_cond_assoc/region_${region_num}/${cons}/${cons}.${stratum}.region_${region_num}.imputed.sample"
    done

    # Produce merged genotype file and calculate allele frequencies:
    qctool_v2.1-dev $mergelist \
                    -incl-positions <(cat ${filestem}.assoc.txt | awk 'NR!=1 { print $1":"$2 }') \
                    -compare-variants-by position,alleles \
                    -flip-to-match-cohort1 \
                    -ofiletype bgen_v1.1 \
                    -bgen-permitted-input-rounding-error 0.001 \
                    -snp-stats \
                    -snp-stats-columns allele-frequencies \
                    -osnp ${filestem}.stats \
                    -og ${filestem}.bgen \
                    -os ${filestem}.sample

    # Calculate LD matrix:
    plink --bgen ${filestem}.bgen \
          --sample ${filestem}.sample \
          --allow-no-sex \
          --r2 square spaces \
          --out ${filestem}

    # Produce .z file:
    join -j 1 \
      <(cat ${filestem}.assoc.txt | \
          awk '{ print $1":"$2,$1,$2,$3,$4,$5,$6,$7 }' | \
          sort -k 1,1) \
      <(cat ${filestem}.stats | \
          awk '{ print $3":"$4,$5,$6,$12 }' | \
          sort -k 1,1) | \
      sort -k 1,1 | \
      # Check that allele encoding agrees:
      awk 'BEGIN { print "rsid","chromosome","position","allele1","allele2","maf","beta","se" }
           { # Encode beta relative to qctool alleleA:
             if ($5==$10 && $6==$9) { $7 = -1*$7 }
             else if (!($5==$9 && $6==$10)) { $7 = "NA"; $8="NA" }
             print $4,$2,$3,$9,$10,$11,$7,$8 }' > \
      ${filestem}.z

    # Calculate sample size:
    sample_size=$(cat ${filestem}.sample | \
      tail -n +3 | wc -l)

    # Make master file:
    echo \
"z;ld;snp;config;cred;log;n_samples
${filestem}.z;\
${filestem}.ld;\
${filestem}.snp;\
${filestem}.config;\
${filestem}.cred;\
${filestem}.log;\
${sample_size}" > \
      ${filestem}.master

    finemap_v1.3.1_x86_64 --sss \
                          --n-causal-snps 1 \
                          --in-files ${filestem}.master
  done # trait


# Compile FINEMAP posterior probabilities for each region:
echo "region_num cons indep_num rsid chromosome position allele1 allele2 maf beta se z prob log10bf group corr_group prob_group log10bf_group mean sd mean_incl sd_incl" > \
  ${results_direc}/jlim_impute/finemap.cond.impute.unique.P_${COND_P_THRESHOLD}.R_${COND_R2_THRESHOLD}.txt
zcat ${results_direc}/jlim_impute/meta.cond.impute.unique.P_${COND_P_THRESHOLD}.R_${COND_R2_THRESHOLD}.filter.p_0.0001.txt.gz | \
  tail -n +2 | \
  cut -f 1-3 | \
  sort -k 1n,1 -k 2,2 -k 3n,3 | \
  uniq | \
  while read region_num cons indep_num; do

    filestem="${temp_direc}/13_jlim_impute/8_fine_map_unique/region_${region_num}/region_${region_num}.${cons}_${indep_num}"

    if [ -f "${filestem}.snp" ]; then
      cat ${filestem}.snp | \
        tail -n +2 | \
        sort -k 4n,4 | \
        awk -v region=$region_num -v cons=$cons -v indep=$indep_num \
          '{ print region,cons,indep,$2,$3,$4,$5,$6,$7,$8,$9,$10,$11,$12,$13,$14,$15,$16,$17,$18,$19,$20 }' >> \
        ${results_direc}/jlim_impute/finemap.cond.impute.unique.P_${COND_P_THRESHOLD}.R_${COND_R2_THRESHOLD}.txt
    else
      echo "$region_num $cons $indep_num NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA" >> \
        ${results_direc}/jlim_impute/finemap.cond.impute.unique.P_${COND_P_THRESHOLD}.R_${COND_R2_THRESHOLD}.txt
    fi

  done # trait

gzip -f ${results_direc}/jlim_impute/finemap.cond.impute.unique.P_${COND_P_THRESHOLD}.R_${COND_R2_THRESHOLD}.txt
